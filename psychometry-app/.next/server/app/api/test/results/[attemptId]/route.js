"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/test/results/[attemptId]/route";
exports.ids = ["app/api/test/results/[attemptId]/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftest%2Fresults%2F%5BattemptId%5D%2Froute&page=%2Fapi%2Ftest%2Fresults%2F%5BattemptId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftest%2Fresults%2F%5BattemptId%5D%2Froute.ts&appDir=C%3A%5CUsers%5Citayp%5COneDrive%5C%D7%9E%D7%A1%D7%9E%D7%9B%D7%99%D7%9D%5Cpsychometry%5Cpsychometry-app%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Citayp%5COneDrive%5C%D7%9E%D7%A1%D7%9E%D7%9B%D7%99%D7%9D%5Cpsychometry%5Cpsychometry-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftest%2Fresults%2F%5BattemptId%5D%2Froute&page=%2Fapi%2Ftest%2Fresults%2F%5BattemptId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftest%2Fresults%2F%5BattemptId%5D%2Froute.ts&appDir=C%3A%5CUsers%5Citayp%5COneDrive%5C%D7%9E%D7%A1%D7%9E%D7%9B%D7%99%D7%9D%5Cpsychometry%5Cpsychometry-app%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Citayp%5COneDrive%5C%D7%9E%D7%A1%D7%9E%D7%9B%D7%99%D7%9D%5Cpsychometry%5Cpsychometry-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_itayp_OneDrive_psychometry_psychometry_app_app_api_test_results_attemptId_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/test/results/[attemptId]/route.ts */ \"(rsc)/./app/api/test/results/[attemptId]/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/test/results/[attemptId]/route\",\n        pathname: \"/api/test/results/[attemptId]\",\n        filename: \"route\",\n        bundlePath: \"app/api/test/results/[attemptId]/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\itayp\\\\OneDrive\\\\מסמכים\\\\psychometry\\\\psychometry-app\\\\app\\\\api\\\\test\\\\results\\\\[attemptId]\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_itayp_OneDrive_psychometry_psychometry_app_app_api_test_results_attemptId_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/test/results/[attemptId]/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ0ZXN0JTJGcmVzdWx0cyUyRiU1QmF0dGVtcHRJZCU1RCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGdGVzdCUyRnJlc3VsdHMlMkYlNUJhdHRlbXB0SWQlNUQlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZ0ZXN0JTJGcmVzdWx0cyUyRiU1QmF0dGVtcHRJZCU1RCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNpdGF5cCU1Q09uZURyaXZlJTVDJUQ3JTlFJUQ3JUExJUQ3JTlFJUQ3JTlCJUQ3JTk5JUQ3JTlEJTVDcHN5Y2hvbWV0cnklNUNwc3ljaG9tZXRyeS1hcHAlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q2l0YXlwJTVDT25lRHJpdmUlNUMlRDclOUUlRDclQTElRDclOUUlRDclOUIlRDclOTklRDclOUQlNUNwc3ljaG9tZXRyeSU1Q3BzeWNob21ldHJ5LWFwcCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDZ0U7QUFDN0k7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wc3ljaG9tZXRyeS1hcHAvPzE4NjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcaXRheXBcXFxcT25lRHJpdmVcXFxc157Xodee15vXmdedXFxcXHBzeWNob21ldHJ5XFxcXHBzeWNob21ldHJ5LWFwcFxcXFxhcHBcXFxcYXBpXFxcXHRlc3RcXFxccmVzdWx0c1xcXFxbYXR0ZW1wdElkXVxcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdGVzdC9yZXN1bHRzL1thdHRlbXB0SWRdL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdGVzdC9yZXN1bHRzL1thdHRlbXB0SWRdXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS90ZXN0L3Jlc3VsdHMvW2F0dGVtcHRJZF0vcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxpdGF5cFxcXFxPbmVEcml2ZVxcXFzXnteh157Xm9eZ151cXFxccHN5Y2hvbWV0cnlcXFxccHN5Y2hvbWV0cnktYXBwXFxcXGFwcFxcXFxhcGlcXFxcdGVzdFxcXFxyZXN1bHRzXFxcXFthdHRlbXB0SWRdXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS90ZXN0L3Jlc3VsdHMvW2F0dGVtcHRJZF0vcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftest%2Fresults%2F%5BattemptId%5D%2Froute&page=%2Fapi%2Ftest%2Fresults%2F%5BattemptId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftest%2Fresults%2F%5BattemptId%5D%2Froute.ts&appDir=C%3A%5CUsers%5Citayp%5COneDrive%5C%D7%9E%D7%A1%D7%9E%D7%9B%D7%99%D7%9D%5Cpsychometry%5Cpsychometry-app%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Citayp%5COneDrive%5C%D7%9E%D7%A1%D7%9E%D7%9B%D7%99%D7%9D%5Cpsychometry%5Cpsychometry-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/test/results/[attemptId]/route.ts":
/*!***************************************************!*\
  !*** ./app/api/test/results/[attemptId]/route.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./lib/prisma.ts\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/next */ \"(rsc)/./node_modules/next-auth/next/index.js\");\n/* harmony import */ var _lib_authOptions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/authOptions */ \"(rsc)/./lib/authOptions.ts\");\n\n\n\n\n// Temporary function to get all questions - Replace with DB query if questions are in DB\n// This replicates the logic from /api/questions/route.ts for now\nasync function getAllQuestions() {\n    // In a real app, fetch these from your database\n    // For now, copy the hardcoded questions from /api/questions/route.ts\n    const verbalQuestions = [\n        {\n            id: 1,\n            text: \"מה המשמעות של המילה 'אנכרוניזם'?\",\n            options: [\n                \"שימוש במונח או רעיון שאינו מתאים לתקופה\",\n                \"תיאור מדויק של אירוע היסטורי\",\n                \"שימוש במילים נרדפות\",\n                \"תיאור של אירוע עתידי\"\n            ],\n            correctAnswer: 0,\n            explanation: \"אנכרוניזם הוא שימוש במונח, רעיון או אובייקט שאינו מתאים לתקופה המתוארת. לדוגמה, אם נציג אדם מימי הביניים משתמש בטלפון סלולרי, זהו אנכרוניזם.\"\n        },\n        {\n            id: 2,\n            text: \"מה המשמעות של הביטוי 'להשליך יהבו'?\",\n            options: [\n                \"להתפלל\",\n                \"להתאבד\",\n                \"להתמסר\",\n                \"להתנצל\"\n            ],\n            correctAnswer: 2,\n            explanation: \"הביטוי 'להשליך יהבו' משמעותו להתמסר, לסמוך על מישהו או משהו. מקור הביטוי בתנ\\\"ך, בספר תהילים.\"\n        },\n        {\n            id: 3,\n            text: \"מה המשמעות של המילה 'אפוריזם'?\",\n            options: [\n                \"משפט קצר וחכם\",\n                \"סוג של מחלה\",\n                \"תיאור של צבע\",\n                \"סוג של צמח\"\n            ],\n            correctAnswer: 0,\n            explanation: \"אפוריזם הוא משפט קצר וחכם המכיל אמת או עצה חשובה. לדוגמה: 'דע את עצמך' הוא אפוריזם מפורסם.\"\n        },\n        {\n            id: 4,\n            text: \"מה המשמעות של הביטוי 'לשבור את הקרח'?\",\n            options: [\n                \"להתחיל שיחה או היכרות\",\n                \"להרוס דבר מה\",\n                \"להתקרר\",\n                \"להתגבר על מכשול\"\n            ],\n            correctAnswer: 0,\n            explanation: \"הביטוי 'לשבור את הקרח' משמעותו להתחיל שיחה או היכרות, בדרך כלל במצב של מבוכה או ריחוק.\"\n        },\n        {\n            id: 5,\n            text: \"מה המשמעות של המילה 'פרדוקס'?\",\n            options: [\n                \"סתירה לכאורה\",\n                \"סוג של בעיה מתמטית\",\n                \"תיאור של מצב רגשי\",\n                \"סוג של טיעון\"\n            ],\n            correctAnswer: 0,\n            explanation: \"פרדוקס הוא סתירה לכאורה או מצב שנראה בלתי אפשרי אך הוא נכון. לדוגמה: 'המשפט הזה הוא שקר' הוא פרדוקס.\"\n        },\n        {\n            id: 6,\n            text: \"מה המשמעות של הביטוי 'להחזיק את המקל בשני קצותיו'?\",\n            options: [\n                \"לנסות לרצות את כולם\",\n                \"להתאמן בספורט\",\n                \"להתמודד עם קושי\",\n                \"להתנהג בחוסר החלטיות\"\n            ],\n            correctAnswer: 3,\n            explanation: \"הביטוי 'להחזיק את המקל בשני קצותיו' משמעותו להתנהג בחוסר החלטיות או לנסות להיות בצד של כולם.\"\n        },\n        {\n            id: 7,\n            text: \"מה המשמעות של המילה 'אוקסימורון'?\",\n            options: [\n                \"צירוף מילים סותר\",\n                \"סוג של מכשיר מדעי\",\n                \"תיאור של מצב רגשי\",\n                \"סוג של טיעון לוגי\"\n            ],\n            correctAnswer: 0,\n            explanation: \"אוקסימורון הוא צירוף של מילים הסותרות זו את זו, כמו 'שתיקה רועמת' או 'חושך מאיר'.\"\n        },\n        {\n            id: 8,\n            text: \"מה המשמעות של הביטוי 'להתפלפל בשערה'?\",\n            options: [\n                \"להתווכח על דברים קטנים\",\n                \"להתאמן בספורט\",\n                \"להתמודד עם קושי\",\n                \"להתנהג בחוסר החלטיות\"\n            ],\n            correctAnswer: 0,\n            explanation: \"הביטוי 'להתפלפל בשערה' משמעותו להתווכח או לדון בדברים קטנים וחסרי חשיבות.\"\n        },\n        {\n            id: 9,\n            text: \"מה המשמעות של המילה 'מטאפורה'?\",\n            options: [\n                \"השוואה בלתי ישירה\",\n                \"סוג של מכשיר מדעי\",\n                \"תיאור של מצב רגשי\",\n                \"סוג של טיעון לוגי\"\n            ],\n            correctAnswer: 0,\n            explanation: \"מטאפורה היא השוואה בלתי ישירה בין שני דברים, כמו 'היא שמש המשפחה'.\"\n        },\n        {\n            id: 10,\n            text: \"מה המשמעות של הביטוי 'להפוך את הקערה על פיה'?\",\n            options: [\n                \"לשנות את הסדר הקיים\",\n                \"להתאמן בספורט\",\n                \"להתמודד עם קושי\",\n                \"להתנהג בחוסר החלטיות\"\n            ],\n            correctAnswer: 0,\n            explanation: \"הביטוי 'להפוך את הקערה על פיה' משמעותו לשנות את הסדר הקיים או להפוך את המצב על ראשו.\"\n        }\n    ];\n    const quantitativeQuestions = [\n        {\n            id: 1,\n            text: \"מהו ערכו של x במשוואה: 2x + 5 = 15?\",\n            options: [\n                \"5\",\n                \"10\",\n                \"7.5\",\n                \"20\"\n            ],\n            correctAnswer: 0,\n            explanation: \"כדי לפתור את המשוואה, נחסר 5 משני הצדדים: 2x = 10. לאחר מכן נחלק ב-2: x = 5.\"\n        },\n        {\n            id: 2,\n            text: 'מהו שטחו של משולש שווה צלעות שאורך צלעו 6 ס\"מ?',\n            options: [\n                \"9√3\",\n                \"18\",\n                \"12√3\",\n                \"36\"\n            ],\n            correctAnswer: 0,\n            explanation: \"שטח משולש שווה צלעות מחושב על ידי הנוסחה: (צלע\\xb2 * √3) / 4. במקרה זה: (6\\xb2 * √3) / 4 = 9√3.\"\n        },\n        {\n            id: 3,\n            text: \"מהו ערכו של x במשוואה: 3(x + 4) = 21?\",\n            options: [\n                \"3\",\n                \"5\",\n                \"7\",\n                \"9\"\n            ],\n            correctAnswer: 0,\n            explanation: \"ראשית נחלק את שני הצדדים ב-3: x + 4 = 7. לאחר מכן נחסר 4: x = 3.\"\n        },\n        {\n            id: 4,\n            text: 'מהו היקף המעגל שקוטרו 10 ס\"מ?',\n            options: [\n                \"10π\",\n                \"20π\",\n                \"25π\",\n                \"100π\"\n            ],\n            correctAnswer: 0,\n            explanation: \"היקף מעגל מחושב על ידי הנוסחה: π \\xd7 קוטר. במקרה זה: π \\xd7 10 = 10π.\"\n        },\n        {\n            id: 5,\n            text: \"מהו ערכו של x במשוואה: x\\xb2 - 9 = 0?\",\n            options: [\n                \"3 או -3\",\n                \"9\",\n                \"81\",\n                \"0\"\n            ],\n            correctAnswer: 0,\n            explanation: \"נוסיף 9 לשני הצדדים: x\\xb2 = 9. לכן x = 3 או x = -3.\"\n        },\n        {\n            id: 6,\n            text: 'מהו נפח קובייה שאורך צלעה 4 ס\"מ?',\n            options: [\n                \"64\",\n                \"16\",\n                \"32\",\n                \"48\"\n            ],\n            correctAnswer: 0,\n            explanation: \"נפח קובייה מחושב על ידי הנוסחה: צלע\\xb3. במקרה זה: 4\\xb3 = 64.\"\n        },\n        {\n            id: 7,\n            text: \"מהו ערכו של x במשוואה: 4x - 8 = 2x + 6?\",\n            options: [\n                \"7\",\n                \"5\",\n                \"3\",\n                \"1\"\n            ],\n            correctAnswer: 0,\n            explanation: \"נעביר את כל ה-x לצד אחד ואת המספרים לצד השני: 4x - 2x = 6 + 8. נקבל: 2x = 14, ולכן x = 7.\"\n        },\n        {\n            id: 8,\n            text: 'מהו שטחו של מלבן שאורכו 8 ס\"מ ורוחבו 5 ס\"מ?',\n            options: [\n                \"40\",\n                \"13\",\n                \"26\",\n                \"20\"\n            ],\n            correctAnswer: 0,\n            explanation: \"שטח מלבן מחושב על ידי הנוסחה: אורך \\xd7 רוחב. במקרה זה: 8 \\xd7 5 = 40.\"\n        },\n        {\n            id: 9,\n            text: \"מהו ערכו של x במשוואה: 2(x - 3) = x + 4?\",\n            options: [\n                \"10\",\n                \"5\",\n                \"7\",\n                \"3\"\n            ],\n            correctAnswer: 0,\n            explanation: \"נפתח סוגריים: 2x - 6 = x + 4. נעביר את כל ה-x לצד אחד ואת המספרים לצד השני: 2x - x = 4 + 6. נקבל: x = 10.\"\n        },\n        {\n            id: 10,\n            text: 'מהו שטחו של מעגל שרדיוסו 5 ס\"מ?',\n            options: [\n                \"25π\",\n                \"10π\",\n                \"50π\",\n                \"100π\"\n            ],\n            correctAnswer: 0,\n            explanation: \"שטח מעגל מחושב על ידי הנוסחה: π \\xd7 רדיוס\\xb2. במקרה זה: π \\xd7 5\\xb2 = 25π.\"\n        }\n    ];\n    const englishQuestions = [\n        {\n            id: 1,\n            text: \"Choose the correct word to complete the sentence: The students were _____ to hear about the field trip.\",\n            options: [\n                \"excited\",\n                \"exciting\",\n                \"excite\",\n                \"excitement\"\n            ],\n            correctAnswer: 0,\n            explanation: \"The correct answer is 'excited' because it is an adjective describing how the students felt.\"\n        },\n        {\n            id: 2,\n            text: \"Which sentence is grammatically correct?\",\n            options: [\n                \"She has been working here since 2010.\",\n                \"She is working here since 2010.\",\n                \"She works here since 2010.\",\n                \"She worked here since 2010.\"\n            ],\n            correctAnswer: 0,\n            explanation: \"The present perfect continuous tense is used for actions that started in the past and continue to the present.\"\n        },\n        {\n            id: 3,\n            text: \"Choose the correct word: The _____ of the book was very interesting.\",\n            options: [\n                \"content\",\n                \"contain\",\n                \"contents\",\n                \"containing\"\n            ],\n            correctAnswer: 0,\n            explanation: \"'Content' is the correct noun form here, referring to what is inside the book.\"\n        },\n        {\n            id: 4,\n            text: \"Which sentence uses the correct tense?\",\n            options: [\n                \"I have lived here for five years.\",\n                \"I am living here for five years.\",\n                \"I live here for five years.\",\n                \"I was living here for five years.\"\n            ],\n            correctAnswer: 0,\n            explanation: \"The present perfect tense is used for actions that started in the past and continue to the present.\"\n        },\n        {\n            id: 5,\n            text: \"Choose the correct preposition: She is good _____ mathematics.\",\n            options: [\n                \"at\",\n                \"in\",\n                \"on\",\n                \"with\"\n            ],\n            correctAnswer: 0,\n            explanation: \"The preposition 'at' is used with the adjective 'good' when referring to skills.\"\n        },\n        {\n            id: 6,\n            text: \"Which sentence is correct?\",\n            options: [\n                \"Neither of the answers is correct.\",\n                \"Neither of the answers are correct.\",\n                \"Neither of the answer is correct.\",\n                \"Neither of the answer are correct.\"\n            ],\n            correctAnswer: 0,\n            explanation: \"When 'neither' is the subject, it takes a singular verb.\"\n        },\n        {\n            id: 7,\n            text: \"Choose the correct word: The _____ of the movie was unexpected.\",\n            options: [\n                \"ending\",\n                \"end\",\n                \"ended\",\n                \"ends\"\n            ],\n            correctAnswer: 0,\n            explanation: \"'Ending' is the correct noun form here, referring to how the movie concluded.\"\n        },\n        {\n            id: 8,\n            text: \"Which sentence uses the correct article?\",\n            options: [\n                \"She is the best student in the class.\",\n                \"She is best student in the class.\",\n                \"She is a best student in the class.\",\n                \"She is an best student in the class.\"\n            ],\n            correctAnswer: 0,\n            explanation: \"The definite article 'the' is used with superlative adjectives.\"\n        },\n        {\n            id: 9,\n            text: \"Choose the correct word: The _____ of the problem was complex.\",\n            options: [\n                \"solution\",\n                \"solve\",\n                \"solving\",\n                \"solved\"\n            ],\n            correctAnswer: 0,\n            explanation: \"'Solution' is the correct noun form here, referring to the answer to the problem.\"\n        },\n        {\n            id: 10,\n            text: \"Which sentence is correct?\",\n            options: [\n                \"If I were you, I would study more.\",\n                \"If I was you, I would study more.\",\n                \"If I am you, I would study more.\",\n                \"If I be you, I would study more.\"\n            ],\n            correctAnswer: 0,\n            explanation: \"In hypothetical situations, we use 'were' instead of 'was' with 'I'.\"\n        },\n        {\n            id: 11,\n            text: \"Choose the correct word: The _____ of the experiment was successful.\",\n            options: [\n                \"outcome\",\n                \"out\",\n                \"outing\",\n                \"outgoing\"\n            ],\n            correctAnswer: 0,\n            explanation: \"'Outcome' is the correct noun form here, referring to the result of the experiment.\"\n        },\n        {\n            id: 12,\n            text: \"Which sentence uses the correct modal verb?\",\n            options: [\n                \"You should have studied more.\",\n                \"You should had studied more.\",\n                \"You should has studied more.\",\n                \"You should having studied more.\"\n            ],\n            correctAnswer: 0,\n            explanation: \"The correct form is 'should have' + past participle for past advice.\"\n        },\n        {\n            id: 13,\n            text: \"Choose the correct word: The _____ of the story was surprising.\",\n            options: [\n                \"plot\",\n                \"plotted\",\n                \"plotting\",\n                \"plots\"\n            ],\n            correctAnswer: 0,\n            explanation: \"'Plot' is the correct noun form here, referring to the main events of the story.\"\n        },\n        {\n            id: 14,\n            text: \"Which sentence uses the correct conditional?\",\n            options: [\n                \"If it rains, we will stay home.\",\n                \"If it rain, we will stay home.\",\n                \"If it raining, we will stay home.\",\n                \"If it rained, we will stay home.\"\n            ],\n            correctAnswer: 0,\n            explanation: \"The first conditional uses present simple in the if-clause and future simple in the main clause.\"\n        },\n        {\n            id: 15,\n            text: \"Choose the correct word: The _____ of the meeting was productive.\",\n            options: [\n                \"outcome\",\n                \"out\",\n                \"outing\",\n                \"outgoing\"\n            ],\n            correctAnswer: 0,\n            explanation: \"'Outcome' is the correct noun form here, referring to the result of the meeting.\"\n        },\n        {\n            id: 16,\n            text: \"Which sentence uses the correct passive voice?\",\n            options: [\n                \"The book was written by the author.\",\n                \"The book was wrote by the author.\",\n                \"The book was writing by the author.\",\n                \"The book was writes by the author.\"\n            ],\n            correctAnswer: 0,\n            explanation: \"The passive voice uses 'was' + past participle.\"\n        },\n        {\n            id: 17,\n            text: \"Choose the correct word: The _____ of the project was impressive.\",\n            options: [\n                \"scope\",\n                \"scoped\",\n                \"scoping\",\n                \"scopes\"\n            ],\n            correctAnswer: 0,\n            explanation: \"'Scope' is the correct noun form here, referring to the extent of the project.\"\n        },\n        {\n            id: 18,\n            text: \"Which sentence uses the correct reported speech?\",\n            options: [\n                \"She said that she was tired.\",\n                \"She said that she is tired.\",\n                \"She said that she be tired.\",\n                \"She said that she being tired.\"\n            ],\n            correctAnswer: 0,\n            explanation: \"In reported speech, we backshift the tense of the original statement.\"\n        },\n        {\n            id: 19,\n            text: \"Choose the correct word: The _____ of the argument was unclear.\",\n            options: [\n                \"premise\",\n                \"premised\",\n                \"premising\",\n                \"premises\"\n            ],\n            correctAnswer: 0,\n            explanation: \"'Premise' is the correct noun form here, referring to the basis of the argument.\"\n        },\n        {\n            id: 20,\n            text: \"Which sentence uses the correct relative clause?\",\n            options: [\n                \"The book that I read was interesting.\",\n                \"The book which I read was interesting.\",\n                \"The book who I read was interesting.\",\n                \"The book whom I read was interesting.\"\n            ],\n            correctAnswer: 0,\n            explanation: \"We use 'that' for things in defining relative clauses.\"\n        }\n    ];\n    return {\n        verbal: verbalQuestions,\n        quantitative: quantitativeQuestions,\n        english: englishQuestions\n    };\n}\nasync function getQuestionDetails(questionId, sectionType) {\n    console.log(`Fetching details for question ID: ${questionId} (type: ${typeof questionId})`);\n    // First try to find the question directly in the database\n    try {\n        const question = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].question.findUnique({\n            where: {\n                id: questionId\n            }\n        });\n        if (question) {\n            // Shuffle the options and update correct answer index\n            const options = typeof question.options === \"string\" ? JSON.parse(question.options) : question.options;\n            const optionIndices = options.map((_, index)=>index);\n            const shuffledIndices = [\n                ...optionIndices\n            ].sort(()=>Math.random() - 0.5);\n            const shuffledOptions = shuffledIndices.map((index)=>options[index]);\n            const newCorrectAnswerIndex = shuffledIndices.indexOf(question.correctAnswer);\n            return {\n                id: question.id,\n                text: question.content,\n                options: shuffledOptions,\n                correctAnswer: newCorrectAnswerIndex,\n                explanation: \"\"\n            };\n        }\n    } catch (error) {\n        console.warn(`Error fetching question from database: ${error}`);\n    }\n    // If not found in database and we have a section type, try to find it in the hardcoded questions\n    if (sectionType) {\n        const allQuestionsData = await getAllQuestions();\n        const sectionQuestions = allQuestionsData[sectionType];\n        if (!sectionQuestions) {\n            console.warn(`No hardcoded questions found for section type: ${sectionType}`);\n            return null;\n        }\n        // Try to find the question by numeric ID\n        const numericId = parseInt(questionId, 10);\n        if (!isNaN(numericId)) {\n            const foundQuestion = sectionQuestions.find((q)=>q.id === numericId);\n            if (foundQuestion) {\n                // Shuffle the options and update correct answer index\n                const optionIndices = foundQuestion.options.map((_, index)=>index);\n                const shuffledIndices = [\n                    ...optionIndices\n                ].sort(()=>Math.random() - 0.5);\n                const shuffledOptions = shuffledIndices.map((index)=>foundQuestion.options[index]);\n                const newCorrectAnswerIndex = shuffledIndices.indexOf(foundQuestion.correctAnswer);\n                return {\n                    ...foundQuestion,\n                    options: shuffledOptions,\n                    correctAnswer: newCorrectAnswerIndex\n                };\n            }\n        }\n    }\n    // If not found in database or hardcoded questions, try the old format parsing\n    const parts = questionId.split(\"-\");\n    if (parts.length >= 3) {\n        const sectionType = parts[0]; // e.g., 'quantitative'\n        const originalId = parseInt(parts[2], 10); // Get the last part as number\n        if (isNaN(originalId)) {\n            console.warn(`Could not parse original ID number from: ${questionId}`);\n            return null;\n        }\n        const allQuestionsData = await getAllQuestions();\n        const sectionQuestions = allQuestionsData[sectionType];\n        if (!sectionQuestions) {\n            console.warn(`No hardcoded questions found for section type: ${sectionType}`);\n            return null;\n        }\n        // Find the question in the specific section array using the parsed original numeric ID\n        const foundQuestion = sectionQuestions.find((q)=>q.id === originalId);\n        if (!foundQuestion) {\n            console.warn(`Question details not found for type ${sectionType} and original ID ${originalId}`);\n            return null;\n        }\n        // Shuffle the options and update correct answer index\n        const optionIndices = foundQuestion.options.map((_, index)=>index);\n        const shuffledIndices = [\n            ...optionIndices\n        ].sort(()=>Math.random() - 0.5);\n        const shuffledOptions = shuffledIndices.map((index)=>foundQuestion.options[index]);\n        const newCorrectAnswerIndex = shuffledIndices.indexOf(foundQuestion.correctAnswer);\n        return {\n            ...foundQuestion,\n            options: shuffledOptions,\n            correctAnswer: newCorrectAnswerIndex\n        };\n    }\n    console.warn(`Invalid question ID format: ${questionId}`);\n    return null;\n}\nasync function getQuestionsByIds(section, questionIds) {\n    const allQuestions = await getAllQuestions();\n    const sectionQuestions = allQuestions[section] || [];\n    // Shuffle the questions array\n    const shuffledQuestions = [\n        ...sectionQuestions\n    ].sort(()=>Math.random() - 0.5);\n    // Filter the questions for the specific IDs needed for this attempt\n    const relevantQuestions = shuffledQuestions.filter((q)=>questionIds.includes(q.id));\n    // Shuffle each question's options while maintaining the correct answer relationship\n    const shuffledQuestionsWithOptions = relevantQuestions.map((question)=>{\n        // Create an array of option indices\n        const optionIndices = question.options.map((_, index)=>index);\n        // Shuffle the option indices\n        const shuffledIndices = [\n            ...optionIndices\n        ].sort(()=>Math.random() - 0.5);\n        // Create new options array with shuffled order\n        const shuffledOptions = shuffledIndices.map((index)=>question.options[index]);\n        // Find the new index of the correct answer\n        const newCorrectAnswerIndex = shuffledIndices.indexOf(question.correctAnswer);\n        return {\n            ...question,\n            options: shuffledOptions,\n            correctAnswer: newCorrectAnswerIndex\n        };\n    });\n    // Ensure the order matches the answers if necessary, or handle potential missing questions\n    const questionMap = new Map(shuffledQuestionsWithOptions.map((q)=>[\n            q.id,\n            q\n        ]));\n    return questionIds.map((id)=>questionMap.get(id)).filter((q)=>q !== undefined);\n}\n// ---------------------------------------------\nasync function GET(request, { params }) {\n    try {\n        console.log(`Results API: Received request for attemptId: ${params.attemptId}`);\n        const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_2__.getServerSession)(_lib_authOptions__WEBPACK_IMPORTED_MODULE_3__.authOptions);\n        if (!session?.user?.id) {\n            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify({\n                error: \"Unauthorized\"\n            }), {\n                status: 401\n            });\n        }\n        const userId = session.user.id;\n        const testAttempt = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].testAttempt.findUnique({\n            where: {\n                id: params.attemptId,\n                userId: userId\n            }\n        });\n        if (!testAttempt) {\n            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify({\n                error: \"Test attempt not found or unauthorized\"\n            }), {\n                status: 404\n            });\n        }\n        // --- Parse and Structure the Data --- \n        let parsedSectionsData = [];\n        // Fetch essay content directly from the attempt record\n        const essayContentFromDb = testAttempt.essayContent; // <<< Assuming schema was updated with essayContent field\n        try {\n            if (testAttempt.answers) {\n                if (testAttempt.section === \"full_test\") {\n                    parsedSectionsData = JSON.parse(testAttempt.answers);\n                } else {\n                    // Handle single section attempts\n                    const answers = JSON.parse(testAttempt.answers);\n                    console.log(\"Parsed answers from DB:\", answers);\n                    // Calculate score based on correct answers\n                    const correctAnswers = answers.filter((ans)=>ans.isCorrect).length;\n                    const score = correctAnswers / answers.length * 100;\n                    parsedSectionsData = [\n                        {\n                            type: testAttempt.section,\n                            isPilot: false,\n                            score: score,\n                            answers: answers.map((ans)=>({\n                                    ...ans,\n                                    questionId: `${testAttempt.section}-1-${ans.questionId}`\n                                }))\n                        }\n                    ];\n                    console.log(\"Formatted section data:\", parsedSectionsData);\n                }\n            }\n        } catch (e) {\n            console.error(\"Error parsing test attempt answers:\", e);\n            return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify({\n                error: \"Failed to parse result data\"\n            }), {\n                status: 500\n            });\n        }\n        // Map parsed data to the structure expected by the frontend\n        const formattedSections = await Promise.all((parsedSectionsData || []).map(async (sectionData)=>{\n            const sectionResult = {\n                sectionType: sectionData.type,\n                isPilot: sectionData.isPilot,\n                score: sectionData.score,\n                answers: [],\n                essayContent: undefined\n            };\n            if (sectionData.type === \"essay\") {\n                sectionResult.essayContent = essayContentFromDb ?? \"(שגיאה בטעינת תוכן חיבור)\";\n            } else if (Array.isArray(sectionData.answers)) {\n                // Process all answers in parallel for better performance\n                const answersPromises = sectionData.answers.map(async (ans)=>{\n                    // For full test, we need to ensure we're getting the right questions for each section\n                    let questionDetails;\n                    if (testAttempt.section === \"full_test\") {\n                        // For full test, we need to construct the proper question ID\n                        const questionId = `${sectionData.type}-${sectionData.sectionIndex || 1}-${ans.questionId}`;\n                        questionDetails = await getQuestionDetails(questionId);\n                    } else {\n                        // For single section tests, use the question ID as is\n                        questionDetails = await getQuestionDetails(ans.questionId, sectionData.type);\n                    }\n                    // Calculate isCorrect by comparing selected answer with correct answer\n                    const isCorrect = ans.selectedAnswerIndex === questionDetails?.correctAnswer;\n                    return {\n                        questionId: ans.questionId,\n                        selectedAnswerIndex: ans.selectedAnswerIndex,\n                        questionText: questionDetails?.text ?? `טקסט שאלה חסר (ID: ${ans.questionId})`,\n                        options: questionDetails?.options ?? [],\n                        correctAnswerIndex: questionDetails?.correctAnswer,\n                        isCorrect: isCorrect\n                    };\n                });\n                sectionResult.answers = await Promise.all(answersPromises);\n                console.log(`Processed answers for section ${sectionData.type}:`, sectionResult.answers);\n            }\n            return sectionResult;\n        }));\n        // --------------------------------------\n        // Construct the final response object\n        const responseData = {\n            id: testAttempt.id,\n            completedAt: testAttempt.completedAt.toISOString(),\n            sections: formattedSections\n        };\n        console.log(`Results API: Returning structured data for attemptId: ${params.attemptId}`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(responseData);\n    } catch (error) {\n        console.error(\"Results API: Server error:\", error);\n        return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify({\n            error: \"שגיאת שרת פנימית\"\n        }), {\n            status: 500,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n    } finally{\n        await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].$disconnect();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/test/results/[attemptId]/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/authOptions.ts":
/*!****************************!*\
  !*** ./lib/authOptions.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @next-auth/prisma-adapter */ \"(rsc)/./node_modules/@next-auth/prisma-adapter/dist/index.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./lib/prisma.ts\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_3__);\n\n\n // Adjust path if needed\n\nconst authOptions = {\n    adapter: (0,_next_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_1__.PrismaAdapter)(_lib_prisma__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            name: \"Credentials\",\n            credentials: {\n                email: {\n                    label: \"Email\",\n                    type: \"email\",\n                    placeholder: \"test@example.com\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials, req) {\n                if (!credentials?.email || !credentials?.password) {\n                    console.log(\"Authorize: Missing credentials\");\n                    return null;\n                }\n                console.log(\"Authorize: Finding user for email:\", credentials.email);\n                const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__[\"default\"].user.findUnique({\n                    where: {\n                        email: credentials.email\n                    }\n                });\n                if (!user) {\n                    console.log(\"Authorize: User not found\");\n                    return null;\n                }\n                console.log(\"Authorize: Comparing password for user:\", user.email);\n                const isValidPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_3___default().compare(credentials.password, user.password);\n                if (!isValidPassword) {\n                    console.log(\"Authorize: Invalid password\");\n                    return null;\n                }\n                console.log(\"Authorize: Success for user:\", user.email);\n                // Return user object without password\n                return {\n                    id: user.id,\n                    name: user.name,\n                    email: user.email\n                };\n            }\n        })\n    ],\n    session: {\n        strategy: \"jwt\"\n    },\n    jwt: {\n    },\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n            // token.name = user.name;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (session.user && token.id) {\n                session.user.id = token.id;\n            // session.user.name = token.name as string;\n            }\n            console.log(\"Session Callback - Populated Session:\", session);\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/login\"\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvYXV0aE9wdGlvbnMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ2tFO0FBQ1I7QUFDeEIsQ0FBQyx3QkFBd0I7QUFDN0I7QUFFdkIsTUFBTUksY0FBK0I7SUFDMUNDLFNBQVNKLHdFQUFhQSxDQUFDQyxtREFBTUE7SUFDN0JJLFdBQVc7UUFDVE4sMkVBQW1CQSxDQUFDO1lBQ2xCTyxNQUFNO1lBQ05DLGFBQWE7Z0JBQ1hDLE9BQU87b0JBQUVDLE9BQU87b0JBQVNDLE1BQU07b0JBQVNDLGFBQWE7Z0JBQW1CO2dCQUN4RUMsVUFBVTtvQkFBRUgsT0FBTztvQkFBWUMsTUFBTTtnQkFBVztZQUNsRDtZQUNBLE1BQU1HLFdBQVVOLFdBQVcsRUFBRU8sR0FBRztnQkFDOUIsSUFBSSxDQUFDUCxhQUFhQyxTQUFTLENBQUNELGFBQWFLLFVBQVU7b0JBQ2pERyxRQUFRQyxHQUFHLENBQUM7b0JBQ1osT0FBTztnQkFDVDtnQkFFQUQsUUFBUUMsR0FBRyxDQUFDLHNDQUFzQ1QsWUFBWUMsS0FBSztnQkFDbkUsTUFBTVMsT0FBTyxNQUFNaEIsbURBQU1BLENBQUNnQixJQUFJLENBQUNDLFVBQVUsQ0FBQztvQkFDeENDLE9BQU87d0JBQUVYLE9BQU9ELFlBQVlDLEtBQUs7b0JBQUM7Z0JBQ3BDO2dCQUVBLElBQUksQ0FBQ1MsTUFBTTtvQkFDVEYsUUFBUUMsR0FBRyxDQUFDO29CQUNaLE9BQU87Z0JBQ1Q7Z0JBRUFELFFBQVFDLEdBQUcsQ0FBQywyQ0FBMkNDLEtBQUtULEtBQUs7Z0JBQ2pFLE1BQU1ZLGtCQUFrQixNQUFNbEIsdURBQWMsQ0FBQ0ssWUFBWUssUUFBUSxFQUFFSyxLQUFLTCxRQUFRO2dCQUVoRixJQUFJLENBQUNRLGlCQUFpQjtvQkFDcEJMLFFBQVFDLEdBQUcsQ0FBQztvQkFDWixPQUFPO2dCQUNUO2dCQUVBRCxRQUFRQyxHQUFHLENBQUMsZ0NBQWdDQyxLQUFLVCxLQUFLO2dCQUN0RCxzQ0FBc0M7Z0JBQ3RDLE9BQU87b0JBQ0xjLElBQUlMLEtBQUtLLEVBQUU7b0JBQ1hoQixNQUFNVyxLQUFLWCxJQUFJO29CQUNmRSxPQUFPUyxLQUFLVCxLQUFLO2dCQUVuQjtZQUNGO1FBQ0Y7S0FDRDtJQUNEZSxTQUFTO1FBQ1BDLFVBQVU7SUFHWjtJQUNBQyxLQUFLO0lBR0w7SUFDQUMsV0FBVztRQUNULE1BQU1ELEtBQUksRUFBRUUsS0FBSyxFQUFFVixJQUFJLEVBQUU7WUFDdkIsSUFBSUEsTUFBTTtnQkFDUlUsTUFBTUwsRUFBRSxHQUFHTCxLQUFLSyxFQUFFO1lBQ2xCLDBCQUEwQjtZQUM1QjtZQUNBLE9BQU9LO1FBQ1Q7UUFDQSxNQUFNSixTQUFRLEVBQUVBLE9BQU8sRUFBRUksS0FBSyxFQUFFO1lBQzlCLElBQUlKLFFBQVFOLElBQUksSUFBSVUsTUFBTUwsRUFBRSxFQUFFO2dCQUMxQkMsUUFBUU4sSUFBSSxDQUFTSyxFQUFFLEdBQUdLLE1BQU1MLEVBQUU7WUFDbkMsNENBQTRDO1lBQy9DO1lBQ0NQLFFBQVFDLEdBQUcsQ0FBQyx5Q0FBeUNPO1lBQ3RELE9BQU9BO1FBQ1Q7SUFDRjtJQUNBSyxPQUFPO1FBQ0xDLFFBQVE7SUFLVjtBQUVGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wc3ljaG9tZXRyeS1hcHAvLi9saWIvYXV0aE9wdGlvbnMudHM/OTExMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXV0aE9wdGlvbnMgfSBmcm9tICduZXh0LWF1dGgnO1xyXG5pbXBvcnQgQ3JlZGVudGlhbHNQcm92aWRlciBmcm9tICduZXh0LWF1dGgvcHJvdmlkZXJzL2NyZWRlbnRpYWxzJztcclxuaW1wb3J0IHsgUHJpc21hQWRhcHRlciB9IGZyb20gJ0BuZXh0LWF1dGgvcHJpc21hLWFkYXB0ZXInO1xyXG5pbXBvcnQgcHJpc21hIGZyb20gJ0AvbGliL3ByaXNtYSc7IC8vIEFkanVzdCBwYXRoIGlmIG5lZWRlZFxyXG5pbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdGpzJztcclxuXHJcbmV4cG9ydCBjb25zdCBhdXRoT3B0aW9uczogTmV4dEF1dGhPcHRpb25zID0ge1xyXG4gIGFkYXB0ZXI6IFByaXNtYUFkYXB0ZXIocHJpc21hKSxcclxuICBwcm92aWRlcnM6IFtcclxuICAgIENyZWRlbnRpYWxzUHJvdmlkZXIoe1xyXG4gICAgICBuYW1lOiAnQ3JlZGVudGlhbHMnLFxyXG4gICAgICBjcmVkZW50aWFsczoge1xyXG4gICAgICAgIGVtYWlsOiB7IGxhYmVsOiBcIkVtYWlsXCIsIHR5cGU6IFwiZW1haWxcIiwgcGxhY2Vob2xkZXI6IFwidGVzdEBleGFtcGxlLmNvbVwiIH0sXHJcbiAgICAgICAgcGFzc3dvcmQ6IHsgbGFiZWw6IFwiUGFzc3dvcmRcIiwgdHlwZTogXCJwYXNzd29yZFwiIH1cclxuICAgICAgfSxcclxuICAgICAgYXN5bmMgYXV0aG9yaXplKGNyZWRlbnRpYWxzLCByZXEpIHtcclxuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnBhc3N3b3JkKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnQXV0aG9yaXplOiBNaXNzaW5nIGNyZWRlbnRpYWxzJyk7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdBdXRob3JpemU6IEZpbmRpbmcgdXNlciBmb3IgZW1haWw6JywgY3JlZGVudGlhbHMuZW1haWwpO1xyXG4gICAgICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBwcmlzbWEudXNlci5maW5kVW5pcXVlKHtcclxuICAgICAgICAgIHdoZXJlOiB7IGVtYWlsOiBjcmVkZW50aWFscy5lbWFpbCB9LFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBpZiAoIXVzZXIpIHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKCdBdXRob3JpemU6IFVzZXIgbm90IGZvdW5kJyk7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdBdXRob3JpemU6IENvbXBhcmluZyBwYXNzd29yZCBmb3IgdXNlcjonLCB1c2VyLmVtYWlsKTtcclxuICAgICAgICBjb25zdCBpc1ZhbGlkUGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuY29tcGFyZShjcmVkZW50aWFscy5wYXNzd29yZCwgdXNlci5wYXNzd29yZCk7XHJcblxyXG4gICAgICAgIGlmICghaXNWYWxpZFBhc3N3b3JkKSB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnQXV0aG9yaXplOiBJbnZhbGlkIHBhc3N3b3JkJyk7XHJcbiAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdBdXRob3JpemU6IFN1Y2Nlc3MgZm9yIHVzZXI6JywgdXNlci5lbWFpbCk7XHJcbiAgICAgICAgLy8gUmV0dXJuIHVzZXIgb2JqZWN0IHdpdGhvdXQgcGFzc3dvcmRcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgaWQ6IHVzZXIuaWQsXHJcbiAgICAgICAgICBuYW1lOiB1c2VyLm5hbWUsXHJcbiAgICAgICAgICBlbWFpbDogdXNlci5lbWFpbCxcclxuICAgICAgICAgIC8vIEFkZCBvdGhlciBwcm9wZXJ0aWVzIG5lZWRlZCBmb3IgdGhlIHNlc3Npb24vSldUXHJcbiAgICAgICAgfTtcclxuICAgICAgfVxyXG4gICAgfSlcclxuICBdLFxyXG4gIHNlc3Npb246IHtcclxuICAgIHN0cmF0ZWd5OiAnand0JyxcclxuICAgIC8vIG1heEFnZTogMzAgKiAyNCAqIDYwICogNjAsIC8vIDMwIGRheXNcclxuICAgIC8vIHVwZGF0ZUFnZTogMjQgKiA2MCAqIDYwLCAvLyAyNCBob3Vyc1xyXG4gIH0sXHJcbiAgand0OiB7XHJcbiAgICAvLyBzZWNyZXQ6IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1NFQ1JFVCxcclxuICAgIC8vIGVuY3J5cHRpb246IHRydWUsXHJcbiAgfSxcclxuICBjYWxsYmFja3M6IHtcclxuICAgIGFzeW5jIGp3dCh7IHRva2VuLCB1c2VyIH0pIHtcclxuICAgICAgaWYgKHVzZXIpIHtcclxuICAgICAgICB0b2tlbi5pZCA9IHVzZXIuaWQ7XHJcbiAgICAgICAgLy8gdG9rZW4ubmFtZSA9IHVzZXIubmFtZTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gdG9rZW47XHJcbiAgICB9LFxyXG4gICAgYXN5bmMgc2Vzc2lvbih7IHNlc3Npb24sIHRva2VuIH0pIHtcclxuICAgICAgaWYgKHNlc3Npb24udXNlciAmJiB0b2tlbi5pZCkge1xyXG4gICAgICAgICAoc2Vzc2lvbi51c2VyIGFzIGFueSkuaWQgPSB0b2tlbi5pZDtcclxuICAgICAgICAgLy8gc2Vzc2lvbi51c2VyLm5hbWUgPSB0b2tlbi5uYW1lIGFzIHN0cmluZztcclxuICAgICAgfVxyXG4gICAgICAgY29uc29sZS5sb2coXCJTZXNzaW9uIENhbGxiYWNrIC0gUG9wdWxhdGVkIFNlc3Npb246XCIsIHNlc3Npb24pO1xyXG4gICAgICByZXR1cm4gc2Vzc2lvbjtcclxuICAgIH1cclxuICB9LFxyXG4gIHBhZ2VzOiB7XHJcbiAgICBzaWduSW46ICcvbG9naW4nLFxyXG4gICAgLy8gc2lnbk91dDogJy9hdXRoL3NpZ25vdXQnLFxyXG4gICAgLy8gZXJyb3I6ICcvYXV0aC9lcnJvcicsXHJcbiAgICAvLyB2ZXJpZnlSZXF1ZXN0OiAnL2F1dGgvdmVyaWZ5LXJlcXVlc3QnLFxyXG4gICAgLy8gbmV3VXNlcjogJy9hdXRoL25ldy11c2VyJ1xyXG4gIH0sXHJcbiAgLy8gZGVidWc6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnLFxyXG59OyAiXSwibmFtZXMiOlsiQ3JlZGVudGlhbHNQcm92aWRlciIsIlByaXNtYUFkYXB0ZXIiLCJwcmlzbWEiLCJiY3J5cHQiLCJhdXRoT3B0aW9ucyIsImFkYXB0ZXIiLCJwcm92aWRlcnMiLCJuYW1lIiwiY3JlZGVudGlhbHMiLCJlbWFpbCIsImxhYmVsIiwidHlwZSIsInBsYWNlaG9sZGVyIiwicGFzc3dvcmQiLCJhdXRob3JpemUiLCJyZXEiLCJjb25zb2xlIiwibG9nIiwidXNlciIsImZpbmRVbmlxdWUiLCJ3aGVyZSIsImlzVmFsaWRQYXNzd29yZCIsImNvbXBhcmUiLCJpZCIsInNlc3Npb24iLCJzdHJhdGVneSIsImp3dCIsImNhbGxiYWNrcyIsInRva2VuIiwicGFnZXMiLCJzaWduSW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/authOptions.ts\n");

/***/ }),

/***/ "(rsc)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = global.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n});\nif (true) global.prisma = prisma;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE4QztBQVE5QyxNQUFNQyxTQUNKQyxPQUFPRCxNQUFNLElBQ2IsSUFBSUQsd0RBQVlBLENBQUM7QUFFakI7QUFFRixJQUFJRyxJQUF5QixFQUFjRCxPQUFPRCxNQUFNLEdBQUdBO0FBRTNELGlFQUFlQSxNQUFNQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHN5Y2hvbWV0cnktYXBwLy4vbGliL3ByaXNtYS50cz85ODIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcclxuXHJcbmRlY2xhcmUgZ2xvYmFsIHtcclxuICAvLyBhbGxvdyBnbG9iYWwgYHZhcmAgZGVjbGFyYXRpb25zXHJcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXZhclxyXG4gIHZhciBwcmlzbWE6IFByaXNtYUNsaWVudCB8IHVuZGVmaW5lZFxyXG59XHJcblxyXG5jb25zdCBwcmlzbWEgPSBcclxuICBnbG9iYWwucHJpc21hIHx8IFxyXG4gIG5ldyBQcmlzbWFDbGllbnQoe1xyXG4gICAgLy8gbG9nOiBbJ3F1ZXJ5J10sIC8vIFVuY29tbWVudCB0byBzZWUgU1FMIHF1ZXJpZXMgaW4gbG9nc1xyXG4gIH0pO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbC5wcmlzbWEgPSBwcmlzbWE7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBwcmlzbWE7ICJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJwcmlzbWEiLCJnbG9iYWwiLCJwcm9jZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/prisma.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/bcryptjs","vendor-chunks/oauth","vendor-chunks/preact","vendor-chunks/uuid","vendor-chunks/@next-auth","vendor-chunks/yallist","vendor-chunks/preact-render-to-string","vendor-chunks/cookie","vendor-chunks/oidc-token-hash","vendor-chunks/@panva"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftest%2Fresults%2F%5BattemptId%5D%2Froute&page=%2Fapi%2Ftest%2Fresults%2F%5BattemptId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftest%2Fresults%2F%5BattemptId%5D%2Froute.ts&appDir=C%3A%5CUsers%5Citayp%5COneDrive%5C%D7%9E%D7%A1%D7%9E%D7%9B%D7%99%D7%9D%5Cpsychometry%5Cpsychometry-app%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Citayp%5COneDrive%5C%D7%9E%D7%A1%D7%9E%D7%9B%D7%99%D7%9D%5Cpsychometry%5Cpsychometry-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();